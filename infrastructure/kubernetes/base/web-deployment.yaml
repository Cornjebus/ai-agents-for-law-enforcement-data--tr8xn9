apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deployment
  namespace: revenue-platform
  labels:
    app: web
    component: frontend
    managed-by: kustomize
  annotations:
    description: "Next.js web frontend deployment"
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
spec:
  # Start with 2 replicas for high availability
  replicas: 2
  # Configure rolling updates for zero-downtime deployments
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  # Pod selector must match template labels
  selector:
    matchLabels:
      app: web
      component: frontend
  template:
    metadata:
      labels:
        app: web
        component: frontend
    spec:
      # Security context for the pod
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: web
          image: web:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
              protocol: TCP
          # Resource requests and limits for predictable performance
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          # Environment variables
          env:
            - name: NODE_ENV
              value: "production"
            - name: NEXT_PUBLIC_API_URL
              valueFrom:
                configMapKeyRef:
                  name: web-config
                  key: api_url
          # Container security context
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          # Health checks
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
          # Volume mounts for temporary files since root fs is read-only
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      # Volumes definition
      volumes:
        - name: tmp
          emptyDir: {}
      # Pod disruption budget reference
      terminationGracePeriodSeconds: 30
      # Node affinity and anti-affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - web
                topologyKey: kubernetes.io/hostname
---
# HorizontalPodAutoscaler for automatic scaling
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: web-hpa
  namespace: revenue-platform
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: web-deployment
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
---
# PodDisruptionBudget to ensure high availability during node maintenance
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: web-pdb
  namespace: revenue-platform
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: web
      component: frontend