apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: revenue-platform
  labels:
    app: autonomous-revenue-platform
    component: api
    tier: backend
    version: ${VERSION}
    managed-by: kustomize
    # Additional operational labels
    app.kubernetes.io/name: api-service
    app.kubernetes.io/part-of: autonomous-revenue-platform
    app.kubernetes.io/component: api
    app.kubernetes.io/managed-by: kustomize
  annotations:
    # Prometheus monitoring
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
    prometheus.io/path: "/metrics"
    
    # Service mesh and routing
    service.kubernetes.io/topology-aware-hints: "auto"
    
    # Load balancer configuration
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/health"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "3000"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    
    # Performance optimization
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "60"
    service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: "deregistration_delay.timeout_seconds=30"
    
    # Security
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "${SSL_CERT_ARN}"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    
    # High availability
    service.beta.kubernetes.io/aws-load-balancer-attributes: "load_balancing.cross_zone.enabled=true"

spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
      name: http
    - port: 3000
      targetPort: 3000
      protocol: TCP
      name: metrics
  selector:
    app: autonomous-revenue-platform
    component: api
    tier: backend
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800  # 3 hour session stickiness
  # Enable topology-aware routing
  topologyKeys:
    - "kubernetes.io/hostname"
    - "topology.kubernetes.io/zone"
    - "topology.kubernetes.io/region"
    - "*"
  # Configure health checking
  publishNotReadyAddresses: false
  # Set service internal traffic policy
  internalTrafficPolicy: Cluster
  # Configure external traffic policy for better session affinity
  externalTrafficPolicy: Local